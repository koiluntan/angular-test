'use strict';

// Declare app level module which depends on views, and components
var myApp = angular.module('myApp', [
  'ngRoute',
  'myApp.view1',
  'myApp.view2',
  'myApp.version'
]).
config(['$routeProvider', function($routeProvider) {
  $routeProvider.otherwise({
    redirectTo: '/view1'
  });
}]);


function getData($timeout, $q) {
  return function() {
    var defer = $q.defer();
    // simulated async function
    $timeout(function() {
      defer.resolve('data received!')
    }, 2000);
    return defer.promise;
  }
};


function GetData($timeout, $q) {
  return function() {
    var defer = $q.defer(); //deffer object generated by $q.defer(), exposeing a promise as well as the associated methods
    $timeout(
      function() {
        defer.resolve('data received');
      }, 2000
    );
    return defer.promise;
  }
}

var c;
var d

function GetDataByChance($q, $timeout) {
  return function() {
    var defer = $q.defer();
    $timeout(
      function() {
        d = Math.random();
        c = Math.round(d);
        if (c) {
          defer.resolve('data received');
        } else {
          defer.reject('data didn\'t recieve!');
        }
      }, 2000);
    return defer.promise;
  }
}

myApp.factory('getData', GetDataByChance);
myApp.run(function(getData) {
  var promise = getData();
  promise.then(function(string) {
      console.log(string)
    },
    function(shit) {
      console.log(shit)
    });
    promise.finally(function(){console.log('Finished at: ', new Date());});
});
